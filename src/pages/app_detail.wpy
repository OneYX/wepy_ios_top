<style lang="less">
.detail-body {
  padding-top: 16px;
  padding-bottom: 64px;
  display: flex;
  flex-direction: column;
  &__header {
    display: flex;
    flex-direction: row;
  }
  &__title {
    font-size: 22px;
    padding-left: 12px;
    font-weight: bold;
  }
  &__sub-title {
    font-size: 14px;
    padding-left: 12px;
    color: darkgrey;
  }
  &__all-title {
    display: flex;
    flex-direction: column;
  }
}

.detail-update {
  &__title {
    font-size: 22px;
    font-weight: bold;
    margin-bottom: 8px;
  }
  &__sub-title {
    font-size: 14px;
    color: darkgrey;
  }
  &__version {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
  }
  &__content {
    font-size: 14px;
    margin-bottom: 8px;
    margin-top: 8px;
    line-height: 20px;
  }
}

.small-update-content {
  height: 80px;
  overflow: hidden;
}

.detail-describe {
  &__content {
    font-size: 14px;
    line-height: 22px;
  }
}

.small-describe-content {
  height: 66px;
  overflow: hidden;
}

.detail-icon {
  width: 96px;
  height: 96px;
  border-radius: 22%;
  border: 0.5px solid rgba(0, 0, 0, 0.1);
}

.split-line {
  width: 100%;
  height: 1px;
  margin-top: 16px;
  margin-bottom: 16px;
  background-color: #eeeeee;
}

scroll-view {
  position: relative;
  height: 696 * 0.6px;
}

.scroll-wrap {
  position: absolute;
  display: flex;
  align-items: stretch;
  white-space: nowrap;
}

.show-screen {
  width: 392 * 0.6px;
  height: 696 * 0.6px;
  margin-right: 8px;
}
</style>

<template>
  <view class="wrap {{ isx ? 'isx' : '' }}">
    <view>
      <image src="../images/go_back.png" class="go_back_icon" mode="scaleToFill" @tap="backToIndex"/>
    </view>

    <view class="detail-body">

      <view class="detail-body__header">
        <view>
          <image src="{{ detail.artworkUrl512 }}" class="detail-icon" mode="scaleToFill"/>
        </view>
        <view class="detail-body__all-title">
          <text class="detail-body__title">{{ detail.trackName }}</text>
          <text class="detail-body__sub-title">{{ detail.bundleId }}</text>
          <text class="detail-body__sub-title">评分：{{ detail.averageUserRating }}</text>
        </view>

      </view>

      <view class="split-line"></view>

      <view class="f-col">
        <text class="detail-update__title">新功能</text>
        <view class="detail-update__version">
          <text class="detail-update__sub-title">版本 {{ detail.version }}</text>
          <text class="detail-update__sub-title">{{ detail.currentVersionReleaseDate }}</text>
        </view>
        <text class="detail-update__content {{isUpdateOpen?'':'small-update-content'}}" @tap="openUpdateMore">
          {{detail.releaseNotes}}
        </text>
      </view>

      <view class="split-line"></view>

      <view class="detail-show">
        <text class="detail-update__title">浏览</text>
        <scroll-view scroll-x>
          <view class="scroll-wrap">
            <repeat for="{{ detail.screenshotUrls }}" key="id" index="index" item="item">
              <image src="{{ item }}" class="show-screen"/>
            </repeat>
          </view>
        </scroll-view>
      </view>

      <view class="split-line"></view>

      <view class="detail-describe f-col">
        <text class="detail-describe__content {{isDescribeOpen?'':'small-describe-content'}}" @tap="openDescribeMore">
          {{detail.description}}
        </text>
      </view>

    </view>
  </view>
</template>

<script>
import wepy from 'wepy'
import { getStore, connect } from 'wepy-redux'
import { requestAppDetail } from '../store/actions'
const store = getStore()

@connect({
  country: state => state.base.country,
  countryTitle: state => state.base.countryTitle,
  detail: state => state.detail.detail
})
export default class AppDetail extends wepy.page {
  data = {
    id: null,
    isUpdateOpen: false,
    isDescribeOpen: false,
    isx: /iphone10/i.test(wx.getSystemInfoSync().model)
  }

  config = {}

  components = {}

  methods = {
    backToIndex: function() {
      wepy.navigateBack()
    },
    openUpdateMore: function() {
      this.isUpdateOpen = true
    },
    openDescribeMore: function() {
      this.isDescribeOpen = true
    }
  }

  onLoad(option) {
    store.dispatch(requestAppDetail(option.id, store.getState().base.country))
  }

  mixins = []
}
</script>
